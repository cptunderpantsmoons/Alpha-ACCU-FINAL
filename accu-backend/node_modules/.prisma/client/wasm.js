
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.ACCUScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  vintage: 'vintage',
  location: 'location',
  issuanceDate: 'issuanceDate',
  serialRangeStart: 'serialRangeStart',
  serialRangeEnd: 'serialRangeEnd',
  category: 'category',
  quantity: 'quantity',
  acquisitionCost: 'acquisitionCost',
  classification: 'classification',
  acquisitionDate: 'acquisitionDate',
  entityId: 'entityId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  loanStatus: 'loanStatus',
  loanDetails: 'loanDetails'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  methodType: 'methodType',
  method: 'method'
};

exports.Prisma.ValuationLogScalarFieldEnum = {
  id: 'id',
  batchId: 'batchId',
  date: 'date',
  marketPrice: 'marketPrice',
  nrv: 'nrv',
  impairment: 'impairment',
  userId: 'userId',
  createdAt: 'createdAt',
  entityId: 'entityId'
};

exports.Prisma.AuditLogEntryScalarFieldEnum = {
  id: 'id',
  action: 'action',
  tableName: 'tableName',
  recordId: 'recordId',
  oldValues: 'oldValues',
  newValues: 'newValues',
  userId: 'userId',
  timestamp: 'timestamp',
  ipAddress: 'ipAddress',
  entityId: 'entityId'
};

exports.Prisma.JournalEntryScalarFieldEnum = {
  id: 'id',
  description: 'description',
  date: 'date',
  userId: 'userId',
  createdAt: 'createdAt',
  entityId: 'entityId'
};

exports.Prisma.JournalLineScalarFieldEnum = {
  id: 'id',
  entryId: 'entryId',
  accountCode: 'accountCode',
  debit: 'debit',
  credit: 'credit',
  description: 'description',
  createdAt: 'createdAt',
  entityId: 'entityId'
};

exports.Prisma.XbrlTagScalarFieldEnum = {
  id: 'id',
  tagName: 'tagName',
  value: 'value',
  context: 'context',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  userId: 'userId',
  createdAt: 'createdAt',
  entityId: 'entityId'
};

exports.Prisma.ReclassificationRequestScalarFieldEnum = {
  id: 'id',
  batchId: 'batchId',
  fromClass: 'fromClass',
  toClass: 'toClass',
  reason: 'reason',
  status: 'status',
  submittedBy: 'submittedBy',
  approvedBy: 'approvedBy',
  timestamp: 'timestamp',
  approvedAt: 'approvedAt',
  entityId: 'entityId'
};

exports.Prisma.MarketPriceScalarFieldEnum = {
  id: 'id',
  date: 'date',
  commodityType: 'commodityType',
  price: 'price',
  source: 'source',
  createdAt: 'createdAt',
  entityId: 'entityId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  roles: 'roles',
  preferences: 'preferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  entityId: 'entityId'
};

exports.Prisma.UserSettingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roles: 'roles',
  preferences: 'preferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EntityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  legalName: 'legalName',
  address: 'address',
  contactInfo: 'contactInfo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  parentId: 'parentId'
};

exports.Prisma.LoanScalarFieldEnum = {
  id: 'id',
  batchId: 'batchId',
  creditorId: 'creditorId',
  quantity: 'quantity',
  loanAmount: 'loanAmount',
  buybackRate: 'buybackRate',
  buybackDate: 'buybackDate',
  loanStatus: 'loanStatus',
  collateralValue: 'collateralValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  entityId: 'entityId'
};

exports.Prisma.CreditorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  contactInfo: 'contactInfo',
  terms: 'terms',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ImportJobScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  status: 'status',
  processedRows: 'processedRows',
  errorCount: 'errorCount',
  createdAt: 'createdAt',
  completedAt: 'completedAt',
  userId: 'userId',
  entityId: 'entityId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Classification = exports.$Enums.Classification = {
  inventory: 'inventory',
  intangible: 'intangible',
  fvtpl: 'fvtpl'
};

exports.LoanStatus = exports.$Enums.LoanStatus = {
  active: 'active',
  completed: 'completed',
  expired: 'expired',
  default: 'default'
};

exports.ReclassificationStatus = exports.$Enums.ReclassificationStatus = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.Prisma.ModelName = {
  ACCU: 'ACCU',
  Project: 'Project',
  ValuationLog: 'ValuationLog',
  AuditLogEntry: 'AuditLogEntry',
  JournalEntry: 'JournalEntry',
  JournalLine: 'JournalLine',
  XbrlTag: 'XbrlTag',
  ReclassificationRequest: 'ReclassificationRequest',
  MarketPrice: 'MarketPrice',
  User: 'User',
  UserSetting: 'UserSetting',
  Entity: 'Entity',
  Loan: 'Loan',
  Creditor: 'Creditor',
  ImportJob: 'ImportJob'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/emt777/Documents/Alpha ACCU FINAL /accu-backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/emt777/Documents/Alpha ACCU FINAL /accu-backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Enums\nenum Classification {\n  inventory\n  intangible\n  fvtpl\n}\n\nenum LoanStatus {\n  active\n  completed\n  expired\n  default\n}\n\nenum ReclassificationStatus {\n  pending\n  approved\n  rejected\n}\n\n// Tables\n\nmodel ACCU {\n  id                       String                    @id @default(cuid())\n  projectId                String\n  vintage                  Int\n  location                 String\n  issuanceDate             DateTime\n  serialRangeStart         String\n  serialRangeEnd           String\n  category                 String\n  quantity                 Int\n  acquisitionCost          Float\n  classification           Classification\n  acquisitionDate          DateTime\n  entityId                 String\n  userId                   String\n  createdAt                DateTime                  @default(now())\n  updatedAt                DateTime                  @updatedAt\n  status                   String                    @default(\"active\")\n  loanStatus               Boolean                   @default(false)\n  loanDetails              Json?\n  valuationLogs            ValuationLog[]\n  reclassificationRequests ReclassificationRequest[]\n  loans                    Loan[]\n  auditLogEntries          AuditLogEntry[]\n  createdBy                User?                     @relation(fields: [userId], references: [id])\n  entity                   Entity                    @relation(fields: [entityId], references: [id])\n  project                  Project                   @relation(fields: [projectId], references: [id])\n\n  @@index([entityId])\n  @@index([status])\n  @@map(\"accus\")\n}\n\nmodel Project {\n  id         String @id @default(cuid())\n  name       String\n  methodType String\n  method     String\n  accus      ACCU[]\n\n  @@map(\"projects\")\n}\n\nmodel ValuationLog {\n  id          String   @id @default(cuid())\n  batchId     String\n  date        DateTime\n  marketPrice Float\n  nrv         Float\n  impairment  Float?\n  userId      String\n  createdAt   DateTime @default(now())\n  entityId    String\n  batch       ACCU     @relation(fields: [batchId], references: [id], onDelete: Cascade)\n  createdBy   User     @relation(fields: [userId], references: [id])\n\n  @@index([batchId])\n  @@index([date])\n  @@map(\"valuation_logs\")\n}\n\nmodel AuditLogEntry {\n  id        String   @id @default(cuid())\n  action    String\n  tableName String\n  recordId  String\n  oldValues Json?\n  newValues Json?\n  userId    String\n  timestamp DateTime @default(now())\n  ipAddress String?\n  entityId  String\n  user      User?    @relation(fields: [userId], references: [id])\n  batch     ACCU?    @relation(fields: [recordId], references: [id], onDelete: NoAction, onUpdate: NoAction) // Polymorphic-like\n\n  @@index([userId])\n  @@index([timestamp])\n  @@map(\"audit_log_entries\")\n}\n\nmodel JournalEntry {\n  id          String        @id @default(cuid())\n  description String\n  date        DateTime\n  userId      String\n  createdAt   DateTime      @default(now())\n  entityId    String\n  lines       JournalLine[]\n  createdBy   User          @relation(fields: [userId], references: [id])\n\n  @@index([entityId])\n  @@map(\"journal_entries\")\n}\n\nmodel JournalLine {\n  id          String       @id @default(cuid())\n  entryId     String\n  accountCode String\n  debit       Float\n  credit      Float\n  description String?\n  createdAt   DateTime     @default(now())\n  entityId    String\n  entry       JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)\n\n  @@index([entryId])\n  @@map(\"journal_lines\")\n}\n\nmodel XbrlTag {\n  id          String    @id @default(cuid())\n  tagName     String\n  value       String\n  context     String\n  periodStart DateTime?\n  periodEnd   DateTime?\n  userId      String\n  createdAt   DateTime  @default(now())\n  entityId    String\n  createdBy   User      @relation(fields: [userId], references: [id])\n\n  @@index([entityId])\n  @@map(\"xbrl_tags\")\n}\n\nmodel ReclassificationRequest {\n  id              String                 @id @default(cuid())\n  batchId         String\n  fromClass       Classification\n  toClass         Classification\n  reason          String?\n  status          ReclassificationStatus @default(pending)\n  submittedBy     String\n  approvedBy      String?\n  timestamp       DateTime               @default(now())\n  approvedAt      DateTime?\n  entityId        String\n  batch           ACCU                   @relation(fields: [batchId], references: [id], onDelete: Cascade)\n  submittedByUser User                   @relation(fields: [submittedBy], references: [id])\n\n  @@index([batchId])\n  @@index([status])\n  @@map(\"reclassification_requests\")\n}\n\nmodel MarketPrice {\n  id            String   @id @default(cuid())\n  date          DateTime\n  commodityType String\n  price         Float\n  source        String\n  createdAt     DateTime @default(now())\n  entityId      String\n\n  @@index([date])\n  @@index([entityId])\n  @@map(\"market_prices\")\n}\n\nmodel User {\n  id              String                    @id @default(cuid())\n  email           String                    @unique\n  roles           String\n  preferences     Json?\n  createdAt       DateTime                  @default(now())\n  updatedAt       DateTime                  @updatedAt\n  entityId        String?\n  batches         ACCU[]\n  valuationLogs   ValuationLog[]\n  auditLogs       AuditLogEntry[]\n  journalEntries  JournalEntry[]\n  reclassRequests ReclassificationRequest[]\n  settings        UserSetting[]\n  xbrlTags        XbrlTag[]\n  importJobs      ImportJob[]\n  entity          Entity?                   @relation(fields: [entityId], references: [id])\n\n  @@index([email])\n  @@map(\"users\")\n}\n\nmodel UserSetting {\n  id          String   @id @default(cuid())\n  userId      String   @unique\n  roles       String\n  preferences Json?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_settings\")\n}\n\nmodel Entity {\n  id          String   @id @default(cuid())\n  name        String\n  legalName   String?\n  address     Json?\n  contactInfo Json?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  status      String   @default(\"active\")\n  parentId    String?\n  batches     ACCU[]\n  users       User[]\n  loans       Loan[]\n\n  @@index([parentId])\n  @@map(\"entities\")\n}\n\nmodel Loan {\n  id              String     @id @default(cuid())\n  batchId         String\n  creditorId      String\n  quantity        Int\n  loanAmount      Float\n  buybackRate     Float?\n  buybackDate     DateTime?\n  loanStatus      LoanStatus @default(active)\n  collateralValue Float?\n  createdAt       DateTime   @default(now())\n  updatedAt       DateTime   @updatedAt\n  entityId        String\n  batch           ACCU       @relation(fields: [batchId], references: [id], onDelete: Cascade)\n  creditor        Creditor   @relation(fields: [creditorId], references: [id])\n  entity          Entity     @relation(fields: [entityId], references: [id])\n\n  @@index([batchId])\n  @@index([entityId])\n  @@map(\"loans\")\n}\n\nmodel Creditor {\n  id          String   @id @default(cuid())\n  name        String\n  contactInfo Json?\n  terms       Json?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  loans       Loan[]\n\n  @@map(\"creditors\")\n}\n\nmodel ImportJob {\n  id            String    @id @default(cuid())\n  fileName      String\n  status        String    @default(\"pending\")\n  processedRows Int       @default(0)\n  errorCount    Int       @default(0)\n  createdAt     DateTime  @default(now())\n  completedAt   DateTime?\n  userId        String\n  entityId      String\n  user          User      @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([entityId])\n  @@map(\"import_jobs\")\n}\n",
  "inlineSchemaHash": "82d952575dce914a55019bae7ba79a94325aeabc21066ae5d4c64ad6f5af5ae3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"ACCU\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vintage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuanceDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serialRangeStart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialRangeEnd\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"acquisitionCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"classification\",\"kind\":\"enum\",\"type\":\"Classification\"},{\"name\":\"acquisitionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"loanStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"loanDetails\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"valuationLogs\",\"kind\":\"object\",\"type\":\"ValuationLog\",\"relationName\":\"ACCUToValuationLog\"},{\"name\":\"reclassificationRequests\",\"kind\":\"object\",\"type\":\"ReclassificationRequest\",\"relationName\":\"ACCUToReclassificationRequest\"},{\"name\":\"loans\",\"kind\":\"object\",\"type\":\"Loan\",\"relationName\":\"ACCUToLoan\"},{\"name\":\"auditLogEntries\",\"kind\":\"object\",\"type\":\"AuditLogEntry\",\"relationName\":\"ACCUToAuditLogEntry\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ACCUToUser\"},{\"name\":\"entity\",\"kind\":\"object\",\"type\":\"Entity\",\"relationName\":\"ACCUToEntity\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ACCUToProject\"}],\"dbName\":\"accus\"},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"methodType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accus\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToProject\"}],\"dbName\":\"projects\"},\"ValuationLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"marketPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"nrv\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"impairment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToValuationLog\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToValuationLog\"}],\"dbName\":\"valuation_logs\"},\"AuditLogEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tableName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"newValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogEntryToUser\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToAuditLogEntry\"}],\"dbName\":\"audit_log_entries\"},\"JournalEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lines\",\"kind\":\"object\",\"type\":\"JournalLine\",\"relationName\":\"JournalEntryToJournalLine\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JournalEntryToUser\"}],\"dbName\":\"journal_entries\"},\"JournalLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"debit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"credit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entry\",\"kind\":\"object\",\"type\":\"JournalEntry\",\"relationName\":\"JournalEntryToJournalLine\"}],\"dbName\":\"journal_lines\"},\"XbrlTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToXbrlTag\"}],\"dbName\":\"xbrl_tags\"},\"ReclassificationRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromClass\",\"kind\":\"enum\",\"type\":\"Classification\"},{\"name\":\"toClass\",\"kind\":\"enum\",\"type\":\"Classification\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReclassificationStatus\"},{\"name\":\"submittedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToReclassificationRequest\"},{\"name\":\"submittedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReclassificationRequestToUser\"}],\"dbName\":\"reclassification_requests\"},\"MarketPrice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"commodityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"market_prices\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batches\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToUser\"},{\"name\":\"valuationLogs\",\"kind\":\"object\",\"type\":\"ValuationLog\",\"relationName\":\"UserToValuationLog\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLogEntry\",\"relationName\":\"AuditLogEntryToUser\"},{\"name\":\"journalEntries\",\"kind\":\"object\",\"type\":\"JournalEntry\",\"relationName\":\"JournalEntryToUser\"},{\"name\":\"reclassRequests\",\"kind\":\"object\",\"type\":\"ReclassificationRequest\",\"relationName\":\"ReclassificationRequestToUser\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSetting\",\"relationName\":\"UserToUserSetting\"},{\"name\":\"xbrlTags\",\"kind\":\"object\",\"type\":\"XbrlTag\",\"relationName\":\"UserToXbrlTag\"},{\"name\":\"importJobs\",\"kind\":\"object\",\"type\":\"ImportJob\",\"relationName\":\"ImportJobToUser\"},{\"name\":\"entity\",\"kind\":\"object\",\"type\":\"Entity\",\"relationName\":\"EntityToUser\"}],\"dbName\":\"users\"},\"UserSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSetting\"}],\"dbName\":\"user_settings\"},\"Entity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"legalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contactInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batches\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToEntity\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EntityToUser\"},{\"name\":\"loans\",\"kind\":\"object\",\"type\":\"Loan\",\"relationName\":\"EntityToLoan\"}],\"dbName\":\"entities\"},\"Loan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loanAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"buybackRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"buybackDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"loanStatus\",\"kind\":\"enum\",\"type\":\"LoanStatus\"},{\"name\":\"collateralValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"ACCU\",\"relationName\":\"ACCUToLoan\"},{\"name\":\"creditor\",\"kind\":\"object\",\"type\":\"Creditor\",\"relationName\":\"CreditorToLoan\"},{\"name\":\"entity\",\"kind\":\"object\",\"type\":\"Entity\",\"relationName\":\"EntityToLoan\"}],\"dbName\":\"loans\"},\"Creditor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"terms\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"loans\",\"kind\":\"object\",\"type\":\"Loan\",\"relationName\":\"CreditorToLoan\"}],\"dbName\":\"creditors\"},\"ImportJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedRows\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ImportJobToUser\"}],\"dbName\":\"import_jobs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

